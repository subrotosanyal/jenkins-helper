{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{ChakraProvider,Box,Heading,Input,Button,FormControl,FormLabel,Tabs,TabList,TabPanels,Tab,TabPanel,Textarea,VStack,useToast}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[clientName,setClientName]=useState('');const[branch,setBranch]=useState('development');const[username,setUsername]=useState(localStorage.getItem('jenkinsUsername')||'');const[apiToken,setApiToken]=useState(localStorage.getItem('jenkinsApiToken')||'');const[queueUrl,setQueueUrl]=useState('');const[jobId,setJobId]=useState('');const[jobUrl,setJobUrl]=useState('');const[logs,setLogs]=useState('');const toast=useToast();const logIntervalRef=useRef(null);const queuePollIntervalRef=useRef(null);useEffect(()=>{localStorage.setItem('jenkinsUsername',username);localStorage.setItem('jenkinsApiToken',apiToken);},[username,apiToken]);// Poll the Jenkins queue API until the job is started (i.e. executable is available)\nconst pollQueue=async queueUrl=>{try{const res=await fetch(`/api/queue?queueUrl=${encodeURIComponent(queueUrl)}&username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);const data=await res.json();if(data.executable){// Extract job details from the executable field\nconst job=data.executable;setJobId(job.number);setJobUrl(job.url);toast({title:\"Job Started\",description:`Job ID: ${job.number}`,status:\"success\",duration:3000});// Stop polling the queue\nif(queuePollIntervalRef.current){clearInterval(queuePollIntervalRef.current);}// Start polling logs automatically\npollLogs(job.number,job.url);}}catch(error){console.error(\"Error polling queue:\",error);}};// Trigger the Jenkins job\nconst handleTrigger=async()=>{if(!clientName||!username||!apiToken){toast({title:\"Missing fields\",description:\"Please fill in all required fields.\",status:\"warning\",duration:3000});return;}try{const response=await fetch('/api/trigger',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({clientName,branch,username,apiToken})});const data=await response.json();if(data.error){toast({title:\"Error\",description:data.error,status:\"error\",duration:3000});}else{setQueueUrl(data.queueUrl);toast({title:\"Job Queued\",description:`Queue URL: ${data.queueUrl}`,status:\"success\",duration:3000});// Begin polling the queue API every 3 seconds\nqueuePollIntervalRef.current=setInterval(()=>{pollQueue(data.queueUrl);},3000);}}catch(error){toast({title:\"Error\",description:error.toString(),status:\"error\",duration:3000});}};// Poll job logs every 5 seconds\nconst pollLogs=async(jobId,jobUrl)=>{const fetchLogs=async()=>{try{const res=await fetch(`/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);const logText=await res.text();setLogs(logText);}catch(error){console.error(\"Error fetching logs:\",error);}};// Fetch immediately then every 5 seconds\nawait fetchLogs();logIntervalRef.current=setInterval(fetchLogs,5000);};// Cleanup intervals when component unmounts\nuseEffect(()=>{return()=>{if(logIntervalRef.current){clearInterval(logIntervalRef.current);}if(queuePollIntervalRef.current){clearInterval(queuePollIntervalRef.current);}};},[]);// Handler to manually fetch logs (if needed via the \"View Job Logs\" tab)\nconst handleFetchLogs=async()=>{if(!jobId||!username||!apiToken){toast({title:\"Missing fields\",description:\"Please provide Job ID, username, and API token.\",status:\"warning\",duration:3000});return;}try{const response=await fetch(`/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);const logText=await response.text();setLogs(logText);}catch(error){toast({title:\"Error\",description:error.toString(),status:\"error\",duration:3000});}};return/*#__PURE__*/_jsx(ChakraProvider,{children:/*#__PURE__*/_jsxs(Box,{p:4,children:[/*#__PURE__*/_jsx(Heading,{mb:4,children:\"Jenkins Job Trigger\"}),/*#__PURE__*/_jsxs(Tabs,{variant:\"enclosed\",children:[/*#__PURE__*/_jsxs(TabList,{children:[/*#__PURE__*/_jsx(Tab,{children:\"Trigger Job\"}),/*#__PURE__*/_jsx(Tab,{children:\"View Job Logs\"}),/*#__PURE__*/_jsx(Tab,{children:\"Settings\"})]}),/*#__PURE__*/_jsxs(TabPanels,{children:[/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[/*#__PURE__*/_jsxs(FormControl,{id:\"clientName\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Client Name\"}),/*#__PURE__*/_jsx(Input,{value:clientName,onChange:e=>setClientName(e.target.value),placeholder:\"Enter client name\"})]}),/*#__PURE__*/_jsxs(FormControl,{id:\"branch\",children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Branch (default: development)\"}),/*#__PURE__*/_jsx(Input,{value:branch,onChange:e=>setBranch(e.target.value),placeholder:\"development\"})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleTrigger,children:\"Trigger Job\"}),queueUrl&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Queue URL:\"}),\" \",queueUrl]}),jobId&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Job ID:\"}),\" \",jobId]})]})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[/*#__PURE__*/_jsxs(FormControl,{id:\"jobId\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Job ID\"}),/*#__PURE__*/_jsx(Input,{value:jobId,onChange:e=>setJobId(e.target.value),placeholder:\"Enter job ID\"})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleFetchLogs,children:\"Fetch Logs\"}),/*#__PURE__*/_jsx(FormLabel,{children:\"Logs\"}),/*#__PURE__*/_jsx(Textarea,{value:logs,readOnly:true,height:\"300px\"})]})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[/*#__PURE__*/_jsxs(FormControl,{id:\"username\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Jenkins Username\"}),/*#__PURE__*/_jsx(Input,{value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Enter Jenkins username\"})]}),/*#__PURE__*/_jsxs(FormControl,{id:\"apiToken\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"API Token / Password\"}),/*#__PURE__*/_jsx(Input,{value:apiToken,onChange:e=>setApiToken(e.target.value),placeholder:\"Enter API token or password\"})]})]})})]})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","ChakraProvider","Box","Heading","Input","Button","FormControl","FormLabel","Tabs","TabList","TabPanels","Tab","TabPanel","Textarea","VStack","useToast","jsx","_jsx","jsxs","_jsxs","App","clientName","setClientName","branch","setBranch","username","setUsername","localStorage","getItem","apiToken","setApiToken","queueUrl","setQueueUrl","jobId","setJobId","jobUrl","setJobUrl","logs","setLogs","toast","logIntervalRef","queuePollIntervalRef","setItem","pollQueue","res","fetch","encodeURIComponent","data","json","executable","job","number","url","title","description","status","duration","current","clearInterval","pollLogs","error","console","handleTrigger","response","method","headers","body","JSON","stringify","setInterval","toString","fetchLogs","logText","text","handleFetchLogs","children","p","mb","variant","spacing","align","id","isRequired","value","onChange","e","target","placeholder","colorScheme","onClick","readOnly","height"],"sources":["/Users/subrotosanyal/Documents/work/repos/imw/my-jenkins-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Heading,\n  Input,\n  Button,\n  FormControl,\n  FormLabel,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Textarea,\n  VStack,\n  useToast\n} from '@chakra-ui/react';\n\nfunction App() {\n  const [clientName, setClientName] = useState('');\n  const [branch, setBranch] = useState('development');\n  const [username, setUsername] = useState(localStorage.getItem('jenkinsUsername') || '');\n  const [apiToken, setApiToken] = useState(localStorage.getItem('jenkinsApiToken') || '');\n  const [queueUrl, setQueueUrl] = useState('');\n  const [jobId, setJobId] = useState('');\n  const [jobUrl, setJobUrl] = useState('');\n  const [logs, setLogs] = useState('');\n  const toast = useToast();\n  const logIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const queuePollIntervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    localStorage.setItem('jenkinsUsername', username);\n    localStorage.setItem('jenkinsApiToken', apiToken);\n  }, [username, apiToken]);\n\n  // Poll the Jenkins queue API until the job is started (i.e. executable is available)\n  const pollQueue = async (queueUrl: string) => {\n    try {\n      const res = await fetch(`/api/queue?queueUrl=${encodeURIComponent(queueUrl)}&username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);\n      const data = await res.json();\n      if (data.executable) {\n        // Extract job details from the executable field\n        const job = data.executable;\n        setJobId(job.number);\n        setJobUrl(job.url);\n        toast({\n          title: \"Job Started\",\n          description: `Job ID: ${job.number}`,\n          status: \"success\",\n          duration: 3000\n        });\n        // Stop polling the queue\n        if (queuePollIntervalRef.current) {\n          clearInterval(queuePollIntervalRef.current);\n        }\n        // Start polling logs automatically\n        pollLogs(job.number, job.url);\n      }\n    } catch (error: any) {\n      console.error(\"Error polling queue:\", error);\n    }\n  };\n\n  // Trigger the Jenkins job\n  const handleTrigger = async () => {\n    if (!clientName || !username || !apiToken) {\n      toast({\n        title: \"Missing fields\",\n        description: \"Please fill in all required fields.\",\n        status: \"warning\",\n        duration: 3000\n      });\n      return;\n    }\n    try {\n      const response = await fetch('/api/trigger', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ clientName, branch, username, apiToken })\n      });\n      const data = await response.json();\n      if (data.error) {\n        toast({ title: \"Error\", description: data.error, status: \"error\", duration: 3000 });\n      } else {\n        setQueueUrl(data.queueUrl);\n        toast({\n          title: \"Job Queued\",\n          description: `Queue URL: ${data.queueUrl}`,\n          status: \"success\",\n          duration: 3000\n        });\n        // Begin polling the queue API every 3 seconds\n        queuePollIntervalRef.current = setInterval(() => {\n          pollQueue(data.queueUrl);\n        }, 3000);\n      }\n    } catch (error: any) {\n      toast({ title: \"Error\", description: error.toString(), status: \"error\", duration: 3000 });\n    }\n  };\n\n  // Poll job logs every 5 seconds\n  const pollLogs = async (jobId: number, jobUrl: string) => {\n    const fetchLogs = async () => {\n      try {\n        const res = await fetch(`/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);\n        const logText = await res.text();\n        setLogs(logText);\n      } catch (error: any) {\n        console.error(\"Error fetching logs:\", error);\n      }\n    };\n    // Fetch immediately then every 5 seconds\n    await fetchLogs();\n    logIntervalRef.current = setInterval(fetchLogs, 5000);\n  };\n\n  // Cleanup intervals when component unmounts\n  useEffect(() => {\n    return () => {\n      if (logIntervalRef.current) {\n        clearInterval(logIntervalRef.current);\n      }\n      if (queuePollIntervalRef.current) {\n        clearInterval(queuePollIntervalRef.current);\n      }\n    };\n  }, []);\n\n  // Handler to manually fetch logs (if needed via the \"View Job Logs\" tab)\n  const handleFetchLogs = async () => {\n    if (!jobId || !username || !apiToken) {\n      toast({\n        title: \"Missing fields\",\n        description: \"Please provide Job ID, username, and API token.\",\n        status: \"warning\",\n        duration: 3000\n      });\n      return;\n    }\n    try {\n      const response = await fetch(\n        `/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`\n      );\n      const logText = await response.text();\n      setLogs(logText);\n    } catch (error: any) {\n      toast({ title: \"Error\", description: error.toString(), status: \"error\", duration: 3000 });\n    }\n  };\n\n  return (\n    <ChakraProvider>\n      <Box p={4}>\n        <Heading mb={4}>Jenkins Job Trigger</Heading>\n        <Tabs variant=\"enclosed\">\n          <TabList>\n            <Tab>Trigger Job</Tab>\n            <Tab>View Job Logs</Tab>\n            <Tab>Settings</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <VStack spacing={4} align=\"stretch\">\n                <FormControl id=\"clientName\" isRequired>\n                  <FormLabel>Client Name</FormLabel>\n                  <Input\n                    value={clientName}\n                    onChange={(e) => setClientName(e.target.value)}\n                    placeholder=\"Enter client name\"\n                  />\n                </FormControl>\n                <FormControl id=\"branch\">\n                  <FormLabel>Branch (default: development)</FormLabel>\n                  <Input\n                    value={branch}\n                    onChange={(e) => setBranch(e.target.value)}\n                    placeholder=\"development\"\n                  />\n                </FormControl>\n                <Button colorScheme=\"blue\" onClick={handleTrigger}>Trigger Job</Button>\n                {queueUrl && (\n                  <Box>\n                    <strong>Queue URL:</strong> {queueUrl}\n                  </Box>\n                )}\n                {jobId && (\n                  <Box>\n                    <strong>Job ID:</strong> {jobId}\n                  </Box>\n                )}\n              </VStack>\n            </TabPanel>\n            <TabPanel>\n              <VStack spacing={4} align=\"stretch\">\n                <FormControl id=\"jobId\" isRequired>\n                  <FormLabel>Job ID</FormLabel>\n                  <Input\n                    value={jobId}\n                    onChange={(e) => setJobId(e.target.value)}\n                    placeholder=\"Enter job ID\"\n                  />\n                </FormControl>\n                <Button colorScheme=\"blue\" onClick={handleFetchLogs}>Fetch Logs</Button>\n                <FormLabel>Logs</FormLabel>\n                <Textarea value={logs} readOnly height=\"300px\" />\n              </VStack>\n            </TabPanel>\n            <TabPanel>\n              <VStack spacing={4} align=\"stretch\">\n                <FormControl id=\"username\" isRequired>\n                  <FormLabel>Jenkins Username</FormLabel>\n                  <Input\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Enter Jenkins username\"\n                  />\n                </FormControl>\n                <FormControl id=\"apiToken\" isRequired>\n                  <FormLabel>API Token / Password</FormLabel>\n                  <Input\n                    value={apiToken}\n                    onChange={(e) => setApiToken(e.target.value)}\n                    placeholder=\"Enter API token or password\"\n                  />\n                </FormControl>\n              </VStack>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}