{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{ChakraProvider,Box,Heading,Input,Button,FormControl,FormLabel,Tabs,TabList,TabPanels,Tab,TabPanel,VStack,Spinner,useToast}from'@chakra-ui/react';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{okaidia}from'react-syntax-highlighter/dist/esm/styles/prism';// Define an interface for your parameter objects\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Credentials\nconst[username,setUsername]=useState(localStorage.getItem('jenkinsUsername')||'');const[apiToken,setApiToken]=useState(localStorage.getItem('jenkinsApiToken')||'');// Settings for Jenkins instance & job\nconst[jenkinsUrl,setJenkinsUrl]=useState(localStorage.getItem('jenkinsUrl')||'jenkins.mycareimw.com');const[jenkinsJobName,setJenkinsJobName]=useState(localStorage.getItem('jenkinsJobName')||'imw-client-setup');// Dynamic parameters configuration (default parameters)\nconst defaultParams=[{key:'CLIENT_NAME',defaultValue:''},{key:'BRANCH_NAME',defaultValue:'origin/IMW-uat-changes'}];const storedParams=localStorage.getItem('jenkinsParams');const[jenkinsParams,setJenkinsParams]=useState(storedParams?JSON.parse(storedParams):defaultParams);// Trigger form input values (object mapping parameter key to user-entered value)\nconst[triggerParams,setTriggerParams]=useState(()=>{const init={};jenkinsParams.forEach(p=>{init[p.key]=p.defaultValue;});return init;});// Job queue & log info\nconst[queueUrl,setQueueUrl]=useState('');const[jobId,setJobId]=useState('');const[jobUrl,setJobUrl]=useState('');const[logs,setLogs]=useState('');// Loading flag for waiting on job start\nconst[isQueueLoading,setIsQueueLoading]=useState(false);const toast=useToast();const logIntervalRef=useRef(null);const queuePollIntervalRef=useRef(null);// Persist settings/credentials in localStorage\nuseEffect(()=>{localStorage.setItem('jenkinsUsername',username);},[username]);useEffect(()=>{localStorage.setItem('jenkinsApiToken',apiToken);},[apiToken]);useEffect(()=>{localStorage.setItem('jenkinsUrl',jenkinsUrl);},[jenkinsUrl]);useEffect(()=>{localStorage.setItem('jenkinsJobName',jenkinsJobName);},[jenkinsJobName]);useEffect(()=>{localStorage.setItem('jenkinsParams',JSON.stringify(jenkinsParams));},[jenkinsParams]);// If jenkinsParams change, update triggerParams to ensure every key is present\nuseEffect(()=>{const newTriggerParams={...triggerParams};jenkinsParams.forEach(param=>{if(!(param.key in newTriggerParams)){newTriggerParams[param.key]=param.defaultValue;}});setTriggerParams(newTriggerParams);},[jenkinsParams]);// Poll the Jenkins queue API until the job starts (executable is available)\nconst pollQueue=async queueUrl=>{try{const res=await fetch(`/api/queue?queueUrl=${encodeURIComponent(queueUrl)}&username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);const data=await res.json();if(data.executable){const job=data.executable;setJobId(job.number);setJobUrl(job.url);setIsQueueLoading(false);toast({title:\"Job Started\",description:`Job ID: ${job.number}`,status:\"success\",duration:3000});if(queuePollIntervalRef.current){clearInterval(queuePollIntervalRef.current);}pollLogs(job.number);}}catch(error){console.error(\"Error polling queue:\",error);}};// Trigger the Jenkins job using the settings and parameters\nconst handleTrigger=async()=>{// Check required parameters (if default is empty, user must enter a value)\nfor(const param of jenkinsParams){if(param.defaultValue===''&&(!triggerParams[param.key]||triggerParams[param.key].trim()==='')){toast({title:\"Missing parameter\",description:`Please provide a value for ${param.key}`,status:\"warning\",duration:3000});return;}}if(!username||!apiToken||!jenkinsUrl||!jenkinsJobName){toast({title:\"Missing fields\",description:\"Please fill in all required settings.\",status:\"warning\",duration:3000});return;}setJobId('');setJobUrl('');setIsQueueLoading(true);try{const response=await fetch('/api/trigger',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({parameters:triggerParams,jenkinsUrl,jenkinsJobName,username,apiToken})});const data=await response.json();if(data.error){toast({title:\"Error\",description:data.error,status:\"error\",duration:3000});setIsQueueLoading(false);}else{setQueueUrl(data.queueUrl);toast({title:\"Job Queued\",description:`Queue URL: ${data.queueUrl}`,status:\"success\",duration:3000});// Poll the queue every 3 seconds to check for job start\nqueuePollIntervalRef.current=setInterval(()=>{pollQueue(data.queueUrl);},3000);}}catch(error){toast({title:\"Error\",description:error.toString(),status:\"error\",duration:3000});setIsQueueLoading(false);}};// Poll logs every 5 seconds\nconst pollLogs=async jobId=>{const fetchLogs=async()=>{try{const res=await fetch(`/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);const logText=await res.text();setLogs(logText);}catch(error){console.error(\"Error fetching logs:\",error);}};await fetchLogs();logIntervalRef.current=setInterval(fetchLogs,5000);};// Cleanup intervals on component unmount\nuseEffect(()=>{return()=>{if(logIntervalRef.current)clearInterval(logIntervalRef.current);if(queuePollIntervalRef.current)clearInterval(queuePollIntervalRef.current);};},[]);// Handle input changes in the trigger tab for dynamic parameters\nconst handleParamChange=(key,value)=>{setTriggerParams(prev=>({...prev,[key]:value}));};// Settings: add a new parameter definition\nconst addParameter=()=>{const newKey=prompt(\"Enter parameter key:\");if(newKey){setJenkinsParams([...jenkinsParams,{key:newKey,defaultValue:''}]);}};// Settings: remove a parameter definition\nconst removeParameter=key=>{setJenkinsParams(jenkinsParams.filter(p=>p.key!==key));setTriggerParams(prev=>{const newParams={...prev};delete newParams[key];return newParams;});};// Save settings (persisted automatically; this just shows a toast)\nconst handleSaveSettings=()=>{toast({title:\"Settings Saved\",status:\"success\",duration:2000});};// Manually fetch logs (if needed in the View Job Logs tab)\nconst handleFetchLogs=async()=>{if(!jobId||!username||!apiToken){toast({title:\"Missing fields\",description:\"Please provide Job ID, username, and API token.\",status:\"warning\",duration:3000});return;}try{const response=await fetch(`/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`);const logText=await response.text();setLogs(logText);}catch(error){toast({title:\"Error\",description:error.toString(),status:\"error\",duration:3000});}};return/*#__PURE__*/_jsx(ChakraProvider,{children:/*#__PURE__*/_jsxs(Box,{p:4,children:[/*#__PURE__*/_jsx(Heading,{mb:4,children:\"Jenkins Job Trigger\"}),/*#__PURE__*/_jsxs(Tabs,{variant:\"enclosed\",children:[/*#__PURE__*/_jsxs(TabList,{children:[/*#__PURE__*/_jsx(Tab,{children:\"Trigger Job\"}),/*#__PURE__*/_jsx(Tab,{children:\"View Job Logs\"}),/*#__PURE__*/_jsx(Tab,{children:\"Settings\"})]}),/*#__PURE__*/_jsxs(TabPanels,{children:[/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[jenkinsParams.map(param=>/*#__PURE__*/_jsxs(FormControl,{id:param.key,isRequired:param.defaultValue==='',children:[/*#__PURE__*/_jsx(FormLabel,{children:param.key}),/*#__PURE__*/_jsx(Input,{value:triggerParams[param.key]||'',onChange:e=>handleParamChange(param.key,e.target.value),placeholder:param.defaultValue||`Enter ${param.key}`})]},param.key)),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleTrigger,children:\"Trigger Job\"}),queueUrl&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Queue URL:\"}),\" \",queueUrl]}),isQueueLoading&&/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Spinner,{mr:2}),/*#__PURE__*/_jsx(\"span\",{children:\"Fetching job details...\"})]}),jobId&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Job ID:\"}),\" \",jobId]})]})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[/*#__PURE__*/_jsxs(FormControl,{id:\"jobId\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Job ID\"}),/*#__PURE__*/_jsx(Input,{value:jobId,onChange:e=>setJobId(e.target.value),placeholder:\"Enter job ID\"})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleFetchLogs,children:\"Fetch Logs\"}),/*#__PURE__*/_jsx(FormLabel,{children:\"Logs\"}),/*#__PURE__*/_jsx(Box,{maxH:\"300px\",overflow:\"auto\",border:\"1px\",borderColor:\"gray.200\",p:2,children:/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"text\",style:okaidia,children:logs})})]})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[/*#__PURE__*/_jsxs(FormControl,{id:\"jenkinsUrl\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Jenkins URL\"}),/*#__PURE__*/_jsx(Input,{value:jenkinsUrl,onChange:e=>setJenkinsUrl(e.target.value),placeholder:\"jenkins.mycareimw.com\"})]}),/*#__PURE__*/_jsxs(FormControl,{id:\"jenkinsJobName\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Jenkins Job Name\"}),/*#__PURE__*/_jsx(Input,{value:jenkinsJobName,onChange:e=>setJenkinsJobName(e.target.value),placeholder:\"imw-client-setup\"})]}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Parameters\"}),jenkinsParams.map((param,index)=>/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(FormControl,{id:`param-key-${index}`,mr:2,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Key\"}),/*#__PURE__*/_jsx(Input,{value:param.key,onChange:e=>{const newParams=[...jenkinsParams];newParams[index].key=e.target.value;setJenkinsParams(newParams);}})]}),/*#__PURE__*/_jsxs(FormControl,{id:`param-default-${index}`,mr:2,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Default Value\"}),/*#__PURE__*/_jsx(Input,{value:param.defaultValue,onChange:e=>{const newParams=[...jenkinsParams];newParams[index].defaultValue=e.target.value;setJenkinsParams(newParams);}})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"red\",onClick:()=>removeParameter(param.key),children:\"Remove\"})]},index)),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:addParameter,children:\"Add Parameter\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",children:\"Credentials\"}),/*#__PURE__*/_jsxs(FormControl,{id:\"username\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"Jenkins Username\"}),/*#__PURE__*/_jsx(Input,{value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Enter Jenkins username\"})]}),/*#__PURE__*/_jsxs(FormControl,{id:\"apiToken\",isRequired:true,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"API Token / Password\"}),/*#__PURE__*/_jsx(Input,{value:apiToken,onChange:e=>setApiToken(e.target.value),placeholder:\"Enter API token or password\"})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleSaveSettings,children:\"Save Settings\"})]})})]})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","ChakraProvider","Box","Heading","Input","Button","FormControl","FormLabel","Tabs","TabList","TabPanels","Tab","TabPanel","VStack","Spinner","useToast","Prism","SyntaxHighlighter","okaidia","jsx","_jsx","jsxs","_jsxs","App","username","setUsername","localStorage","getItem","apiToken","setApiToken","jenkinsUrl","setJenkinsUrl","jenkinsJobName","setJenkinsJobName","defaultParams","key","defaultValue","storedParams","jenkinsParams","setJenkinsParams","JSON","parse","triggerParams","setTriggerParams","init","forEach","p","queueUrl","setQueueUrl","jobId","setJobId","jobUrl","setJobUrl","logs","setLogs","isQueueLoading","setIsQueueLoading","toast","logIntervalRef","queuePollIntervalRef","setItem","stringify","newTriggerParams","param","pollQueue","res","fetch","encodeURIComponent","data","json","executable","job","number","url","title","description","status","duration","current","clearInterval","pollLogs","error","console","handleTrigger","trim","response","method","headers","body","parameters","setInterval","toString","fetchLogs","logText","text","handleParamChange","value","prev","addParameter","newKey","prompt","removeParameter","filter","newParams","handleSaveSettings","handleFetchLogs","children","mb","variant","spacing","align","map","id","isRequired","onChange","e","target","placeholder","colorScheme","onClick","display","alignItems","mr","maxH","overflow","border","borderColor","language","style","size","index"],"sources":["/Users/subrotosanyal/Documents/work/repos/imw/my-jenkins-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Heading,\n  Input,\n  Button,\n  FormControl,\n  FormLabel,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  VStack,\n  Spinner,\n  useToast\n} from '@chakra-ui/react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n// Define an interface for your parameter objects\ninterface JenkinsParam {\n  key: string;\n  defaultValue: string;\n}\n\nfunction App() {\n  // Credentials\n  const [username, setUsername] = useState(localStorage.getItem('jenkinsUsername') || '');\n  const [apiToken, setApiToken] = useState(localStorage.getItem('jenkinsApiToken') || '');\n  \n  // Settings for Jenkins instance & job\n  const [jenkinsUrl, setJenkinsUrl] = useState(localStorage.getItem('jenkinsUrl') || 'jenkins.mycareimw.com');\n  const [jenkinsJobName, setJenkinsJobName] = useState(localStorage.getItem('jenkinsJobName') || 'imw-client-setup');\n  \n  // Dynamic parameters configuration (default parameters)\n  const defaultParams: JenkinsParam[] = [\n    { key: 'CLIENT_NAME', defaultValue: '' },\n    { key: 'BRANCH_NAME', defaultValue: 'origin/IMW-uat-changes' }\n  ];\n  const storedParams = localStorage.getItem('jenkinsParams');\n  const [jenkinsParams, setJenkinsParams] = useState<JenkinsParam[]>(\n    storedParams ? JSON.parse(storedParams) : defaultParams\n  );\n  \n  // Trigger form input values (object mapping parameter key to user-entered value)\n  const [triggerParams, setTriggerParams] = useState<{ [key: string]: string }>(() => {\n    const init: { [key: string]: string } = {};\n    jenkinsParams.forEach((p: JenkinsParam) => { init[p.key] = p.defaultValue; });\n    return init;\n  });\n  \n  // Job queue & log info\n  const [queueUrl, setQueueUrl] = useState('');\n  const [jobId, setJobId] = useState('');\n  const [jobUrl, setJobUrl] = useState('');\n  const [logs, setLogs] = useState('');\n  \n  // Loading flag for waiting on job start\n  const [isQueueLoading, setIsQueueLoading] = useState(false);\n  \n  const toast = useToast();\n  const logIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const queuePollIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Persist settings/credentials in localStorage\n  useEffect(() => {\n    localStorage.setItem('jenkinsUsername', username);\n  }, [username]);\n  useEffect(() => {\n    localStorage.setItem('jenkinsApiToken', apiToken);\n  }, [apiToken]);\n  useEffect(() => {\n    localStorage.setItem('jenkinsUrl', jenkinsUrl);\n  }, [jenkinsUrl]);\n  useEffect(() => {\n    localStorage.setItem('jenkinsJobName', jenkinsJobName);\n  }, [jenkinsJobName]);\n  useEffect(() => {\n    localStorage.setItem('jenkinsParams', JSON.stringify(jenkinsParams));\n  }, [jenkinsParams]);\n  \n  // If jenkinsParams change, update triggerParams to ensure every key is present\n  useEffect(() => {\n    const newTriggerParams = { ...triggerParams };\n    jenkinsParams.forEach((param: JenkinsParam) => {\n      if (!(param.key in newTriggerParams)) {\n        newTriggerParams[param.key] = param.defaultValue;\n      }\n    });\n    setTriggerParams(newTriggerParams);\n  }, [jenkinsParams]);\n  \n  // Poll the Jenkins queue API until the job starts (executable is available)\n  const pollQueue = async (queueUrl: string) => {\n    try {\n      const res = await fetch(\n        `/api/queue?queueUrl=${encodeURIComponent(queueUrl)}&username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`\n      );\n      const data = await res.json();\n      if (data.executable) {\n        const job = data.executable;\n        setJobId(job.number);\n        setJobUrl(job.url);\n        setIsQueueLoading(false);\n        toast({\n          title: \"Job Started\",\n          description: `Job ID: ${job.number}`,\n          status: \"success\",\n          duration: 3000\n        });\n        if (queuePollIntervalRef.current) {\n          clearInterval(queuePollIntervalRef.current);\n        }\n        pollLogs(job.number);\n      }\n    } catch (error: any) {\n      console.error(\"Error polling queue:\", error);\n    }\n  };\n  \n  // Trigger the Jenkins job using the settings and parameters\n  const handleTrigger = async () => {\n    // Check required parameters (if default is empty, user must enter a value)\n    for (const param of jenkinsParams) {\n      if (param.defaultValue === '' && (!triggerParams[param.key] || triggerParams[param.key].trim() === '')) {\n        toast({\n          title: \"Missing parameter\",\n          description: `Please provide a value for ${param.key}`,\n          status: \"warning\",\n          duration: 3000\n        });\n        return;\n      }\n    }\n    if (!username || !apiToken || !jenkinsUrl || !jenkinsJobName) {\n      toast({\n        title: \"Missing fields\",\n        description: \"Please fill in all required settings.\",\n        status: \"warning\",\n        duration: 3000\n      });\n      return;\n    }\n    setJobId('');\n    setJobUrl('');\n    setIsQueueLoading(true);\n    try {\n      const response = await fetch('/api/trigger', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          parameters: triggerParams, \n          jenkinsUrl, \n          jenkinsJobName, \n          username, \n          apiToken \n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        toast({ title: \"Error\", description: data.error, status: \"error\", duration: 3000 });\n        setIsQueueLoading(false);\n      } else {\n        setQueueUrl(data.queueUrl);\n        toast({\n          title: \"Job Queued\",\n          description: `Queue URL: ${data.queueUrl}`,\n          status: \"success\",\n          duration: 3000\n        });\n        // Poll the queue every 3 seconds to check for job start\n        queuePollIntervalRef.current = setInterval(() => {\n          pollQueue(data.queueUrl);\n        }, 3000);\n      }\n    } catch (error: any) {\n      toast({ title: \"Error\", description: error.toString(), status: \"error\", duration: 3000 });\n      setIsQueueLoading(false);\n    }\n  };\n  \n  // Poll logs every 5 seconds\n  const pollLogs = async (jobId: number) => {\n    const fetchLogs = async () => {\n      try {\n        const res = await fetch(\n          `/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`\n        );\n        const logText = await res.text();\n        setLogs(logText);\n      } catch (error: any) {\n        console.error(\"Error fetching logs:\", error);\n      }\n    };\n    await fetchLogs();\n    logIntervalRef.current = setInterval(fetchLogs, 5000);\n  };\n  \n  // Cleanup intervals on component unmount\n  useEffect(() => {\n    return () => {\n      if (logIntervalRef.current) clearInterval(logIntervalRef.current);\n      if (queuePollIntervalRef.current) clearInterval(queuePollIntervalRef.current);\n    };\n  }, []);\n  \n  // Handle input changes in the trigger tab for dynamic parameters\n  const handleParamChange = (key: string, value: string) => {\n    setTriggerParams(prev => ({ ...prev, [key]: value }));\n  };\n  \n  // Settings: add a new parameter definition\n  const addParameter = () => {\n    const newKey = prompt(\"Enter parameter key:\");\n    if (newKey) {\n      setJenkinsParams([...jenkinsParams, { key: newKey, defaultValue: '' }]);\n    }\n  };\n  \n  // Settings: remove a parameter definition\n  const removeParameter = (key: string) => {\n    setJenkinsParams(jenkinsParams.filter(p => p.key !== key));\n    setTriggerParams(prev => {\n      const newParams = { ...prev };\n      delete newParams[key];\n      return newParams;\n    });\n  };\n  \n  // Save settings (persisted automatically; this just shows a toast)\n  const handleSaveSettings = () => {\n    toast({ title: \"Settings Saved\", status: \"success\", duration: 2000 });\n  };\n  \n  // Manually fetch logs (if needed in the View Job Logs tab)\n  const handleFetchLogs = async () => {\n    if (!jobId || !username || !apiToken) {\n      toast({\n        title: \"Missing fields\",\n        description: \"Please provide Job ID, username, and API token.\",\n        status: \"warning\",\n        duration: 3000\n      });\n      return;\n    }\n    try {\n      const response = await fetch(\n        `/api/logs/${jobId}?username=${encodeURIComponent(username)}&apiToken=${encodeURIComponent(apiToken)}`\n      );\n      const logText = await response.text();\n      setLogs(logText);\n    } catch (error: any) {\n      toast({ title: \"Error\", description: error.toString(), status: \"error\", duration: 3000 });\n    }\n  };\n  \n  return (\n    <ChakraProvider>\n      <Box p={4}>\n        <Heading mb={4}>Jenkins Job Trigger</Heading>\n        <Tabs variant=\"enclosed\">\n          <TabList>\n            <Tab>Trigger Job</Tab>\n            <Tab>View Job Logs</Tab>\n            <Tab>Settings</Tab>\n          </TabList>\n          <TabPanels>\n            {/* Trigger Job Tab */}\n            <TabPanel>\n              <VStack spacing={4} align=\"stretch\">\n                {jenkinsParams.map((param: JenkinsParam) => (\n                  <FormControl id={param.key} key={param.key} isRequired={param.defaultValue === ''}>\n                    <FormLabel>{param.key}</FormLabel>\n                    <Input\n                      value={triggerParams[param.key] || ''}\n                      onChange={(e) => handleParamChange(param.key, e.target.value)}\n                      placeholder={param.defaultValue || `Enter ${param.key}`}\n                    />\n                  </FormControl>\n                ))}\n                <Button colorScheme=\"blue\" onClick={handleTrigger}>Trigger Job</Button>\n                {queueUrl && (\n                  <Box>\n                    <strong>Queue URL:</strong> {queueUrl}\n                  </Box>\n                )}\n                {isQueueLoading && (\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Spinner mr={2} />\n                    <span>Fetching job details...</span>\n                  </Box>\n                )}\n                {jobId && (\n                  <Box>\n                    <strong>Job ID:</strong> {jobId}\n                  </Box>\n                )}\n              </VStack>\n            </TabPanel>\n            {/* View Job Logs Tab */}\n            <TabPanel>\n              <VStack spacing={4} align=\"stretch\">\n                <FormControl id=\"jobId\" isRequired>\n                  <FormLabel>Job ID</FormLabel>\n                  <Input\n                    value={jobId}\n                    onChange={(e) => setJobId(e.target.value)}\n                    placeholder=\"Enter job ID\"\n                  />\n                </FormControl>\n                <Button colorScheme=\"blue\" onClick={handleFetchLogs}>Fetch Logs</Button>\n                <FormLabel>Logs</FormLabel>\n                <Box maxH=\"300px\" overflow=\"auto\" border=\"1px\" borderColor=\"gray.200\" p={2}>\n                  <SyntaxHighlighter language=\"text\" style={okaidia}>\n                    {logs}\n                  </SyntaxHighlighter>\n                </Box>\n              </VStack>\n            </TabPanel>\n            {/* Settings Tab */}\n            <TabPanel>\n              <VStack spacing={4} align=\"stretch\">\n                <FormControl id=\"jenkinsUrl\" isRequired>\n                  <FormLabel>Jenkins URL</FormLabel>\n                  <Input\n                    value={jenkinsUrl}\n                    onChange={(e) => setJenkinsUrl(e.target.value)}\n                    placeholder=\"jenkins.mycareimw.com\"\n                  />\n                </FormControl>\n                <FormControl id=\"jenkinsJobName\" isRequired>\n                  <FormLabel>Jenkins Job Name</FormLabel>\n                  <Input\n                    value={jenkinsJobName}\n                    onChange={(e) => setJenkinsJobName(e.target.value)}\n                    placeholder=\"imw-client-setup\"\n                  />\n                </FormControl>\n                <Heading size=\"md\">Parameters</Heading>\n                {jenkinsParams.map((param: JenkinsParam, index) => (\n                  <Box key={index} display=\"flex\" alignItems=\"center\">\n                    <FormControl id={`param-key-${index}`} mr={2}>\n                      <FormLabel>Key</FormLabel>\n                      <Input\n                        value={param.key}\n                        onChange={(e) => {\n                          const newParams = [...jenkinsParams];\n                          newParams[index].key = e.target.value;\n                          setJenkinsParams(newParams);\n                        }}\n                      />\n                    </FormControl>\n                    <FormControl id={`param-default-${index}`} mr={2}>\n                      <FormLabel>Default Value</FormLabel>\n                      <Input\n                        value={param.defaultValue}\n                        onChange={(e) => {\n                          const newParams = [...jenkinsParams];\n                          newParams[index].defaultValue = e.target.value;\n                          setJenkinsParams(newParams);\n                        }}\n                      />\n                    </FormControl>\n                    <Button colorScheme=\"red\" onClick={() => removeParameter(param.key)}>Remove</Button>\n                  </Box>\n                ))}\n                <Button colorScheme=\"blue\" onClick={addParameter}>Add Parameter</Button>\n                <Heading size=\"md\">Credentials</Heading>\n                <FormControl id=\"username\" isRequired>\n                  <FormLabel>Jenkins Username</FormLabel>\n                  <Input\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Enter Jenkins username\"\n                  />\n                </FormControl>\n                <FormControl id=\"apiToken\" isRequired>\n                  <FormLabel>API Token / Password</FormLabel>\n                  <Input\n                    value={apiToken}\n                    onChange={(e) => setApiToken(e.target.value)}\n                    placeholder=\"Enter API token or password\"\n                  />\n                </FormControl>\n                <Button colorScheme=\"blue\" onClick={handleSaveSettings}>Save Settings</Button>\n              </VStack>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}